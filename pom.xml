<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>vn.ptit</groupId>
    <artifactId>movie-booking</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <description>Parent project for all modules</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.5</version>
        <relativePath/> <!-- Lookup parent from MAVEN repository -->
    </parent>

    <!-- Shared properties -->
    <properties>
        <maven.version>3.8.5</maven.version>
        <java.version>17</java.version>
        <directory>${project.basedir}/target</directory>
        <profiles.active>dev</profiles.active>
        <spring-boot.version>3.4.5</spring-boot.version>
        <spring-cloud.version>2024.0.2</spring-cloud.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.clean-plugin.version>3.3.2</maven.clean-plugin.version>
        <maven.spotless-plugin.version>2.40.0</maven.spotless-plugin.version>
        <maven.enforcer-plugin.version>3.4.1</maven.enforcer-plugin.version>
        <maven.compiler-plugin.version>3.12.0</maven.compiler-plugin.version>
        <maven.javadoc-plugin.version>3.6.0</maven.javadoc-plugin.version>
        <maven.resources-plugin.version>3.3.1</maven.resources-plugin.version>
        <maven.surefire-plugin.version>3.2.5</maven.surefire-plugin.version>

        <jackson.datatype.version>2.15.3</jackson.datatype.version>
        <hibernate.validator.version>8.0.1.Final</hibernate.validator.version>
        <model.mapper.version>3.2.0</model.mapper.version>
        <imageio.webp.version>0.1.6</imageio.webp.version>
        <jwt.version>0.12.3</jwt.version>
        <mysql.version>8.2.0</mysql.version>
    </properties>

    <!-- Manage shared dependency versions -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot BOM -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud BOM -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Custom dependencies -->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>

            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jwt.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jwt.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jwt.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>org.sejda.imageio</groupId>
                <artifactId>webp-imageio</artifactId>
                <version>${imageio.webp.version}</version>
            </dependency>

            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${model.mapper.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.datatype.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.datatype.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Shared Plugin Management -->
    <build>
        <!-- Declare default configuration for plugins in the project -->
        <pluginManagement>
            <plugins>
                <!-- Spring Boot build JAR -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>

                    <configuration>
                        <layers>
                            <enabled>true</enabled>
                        </layers>
                        <additionalProperties>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <environment>${profiles.active}</environment>
                        </additionalProperties>
                    </configuration>

                    <executions>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>build-info</id>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Build JAR -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                            </manifest>
                        </archive>

                        <!-- Packaged with all class and custom configuration files and shared resources -->
                        <includes>
                            <include>**/*.class</include>
                            <include>logback/**</include>
                            <include>i18n/**</include>
                            <include>config/**</include>
                            <include>META-INF/**</include>
                        </includes>
                    </configuration>
                </plugin>

                <!-- Maven clean project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean-plugin.version}</version>
                </plugin>

                <!-- Auto format code -->
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${maven.spotless-plugin.version}</version>
                    <configuration>
                        <java>
                            <removeUnusedImports/>
                            <trimTrailingWhitespace/>
                            <endWithNewline/>
                        </java>
                    </configuration>
                    <executions>
                        <execution>
                            <id>spotless</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>apply</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Config build rules -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer-plugin.version}</version>

                    <executions>
                        <!-- Execute main rules (Java version, Maven version) -->
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>

                        <!-- Check if dependencies are pulled in multiple versions (dependency convergence) -->
                        <execution>
                            <id>enforce-dependencyConvergence</id>
                            <configuration>
                                <rules>
                                    <DependencyConvergence/>
                                </rules>

                                <!-- Don't fail build, just warn if there is an error -->
                                <fail>false</fail>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>

                    <configuration>
                        <rules>
                            <!-- Required minimum Maven is the specified version -->
                            <requireMavenVersion>
                                <message>You are running an older version. Requires at least Maven ${maven.version}</message>
                                <version>[${maven.version},)</version>
                            </requireMavenVersion>

                            <!-- Only allow building with JDK 17 or 21 -->
                            <requireJavaVersion>
                                <message>You are running an incompatible version of Java. Supports JDK 17 or 21</message>
                                <version>[17,18),[21,22)</version>
                            </requireJavaVersion>
                        </rules>
                    </configuration>
                </plugin>

                <!-- Compiler config -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler-plugin.version}</version>

                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <compilerArgument>-parameters</compilerArgument>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <!-- Config handle resources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources-plugin.version}</version>
                    <executions>
                        <execution>
                            <!-- Executed in the validate phase, very early in the build process -->
                            <id>config-resources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>

                            <configuration>
                                <!-- Destination directory, usually where Spring Boot reads resources -->
                                <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                <!-- Turn off default separator (${...}, @...@) -->
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <!-- Specify the delimiter as #...# (avoid conflict with Spring's ${...}) -->
                                <delimiters>
                                    <delimiter>#</delimiter>
                                </delimiters>

                                <!-- Resource configuration to be copied -->
                                <resources>
                                    <resource>
                                        <!-- Source directory -->
                                        <directory>src/main/resources/</directory>
                                        <!-- Disable variable filtering in files -->
                                        <filtering>true</filtering>
                                        <!-- Copy only the files specified in directories below. Excluded files below, avoid duplicate -->
                                        <includes>
                                            <include>i18n/*.properties</include>
                                            <include>logback/*.xml</include>
                                            <include>META-INF/**</include>
                                        </includes>
                                        <excludes>
                                            <exclude>config/*.yml</exclude>
                                        </excludes>
                                    </resource>

                                    <!-- Separate filters for config files -->
                                    <resource>
                                        <!-- Source directory -->
                                        <directory>src/main/resources/</directory>
                                        <!-- Enable variable filtering in files -->
                                        <!-- Maven will scan the copied files and replace variables in the format ${...} -->
                                        <!-- with the corresponding values from pom.xml or .properties configuration file -->
                                        <filtering>true</filtering>
                                        <!-- Copy only the files specified in the directory below -->
                                        <includes>
                                            <include>config/*.yml</include>
                                            <include>config/*.properties</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Config run test -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire-plugin.version}</version>
                    <configuration>
                        <skipTests>true</skipTests>
                        <testFailureIgnore>true</testFailureIgnore>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
